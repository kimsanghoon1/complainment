spring:
  config:
    activate:
      on-profile: default
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:9090/realms/master/protocol/openid-connect/certs
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  cloud:
    function:
      definition: wheneverComplaintReceived_ApplyComplain;discardFunction;producer;
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        wheneverComplaintReceived_ApplyComplain-in-0:
          group: complaint
          destination: complainment
          contentType: application/json
        discardFunction-in-0:
          destination: complainment
          contentType: application/json
        producer-in-0:
          destination: complainment
          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

server:
  port: 8087

---

spring:
  config:
    activate:
      on-profile: docker
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://192.168.240.23:31234/realms/master/protocol/openid-connect/certs
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  cloud:
    function:
      definition: wheneverComplaintReceived_ApplyComplain;discardFunction;producer;
    stream:
      kafka:
        binder:
          brokers: kafka.kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        wheneverComplaintReceived_ApplyComplain-in-0:
          group: complaint
          destination: complainment
          contentType: application/json
        discardFunction-in-0:
          destination: complainment
          contentType: application/json
        producer-in-0:
          destination: complainment
          contentType: application/json


